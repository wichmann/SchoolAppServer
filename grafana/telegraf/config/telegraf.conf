# Telegraf Configuration

# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  hostname = ""
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"
  organization = "$DOCKER_INFLUXDB_INIT_ORG"
  bucket = "$DOCKER_INFLUXDB_INIT_BUCKET"

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# Read metrics about cpu usage
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
# Read metrics about disk IO by device
[[inputs.diskio]]
# Read metrics about memory usage
[[inputs.mem]]
# Collect kernel snmp counters and network interface statistics
[[inputs.nstat]]
# Get the number of processes and group them by status
[[inputs.processes]]
# Read metrics about swap memory usage
[[inputs.swap]]
# Read metrics about system load & uptime
[[inputs.system]]
# Get kernel statistics from /proc/stat
[[inputs.kernel]]
# # Get kernel statistics from /proc/vmstat
[[inputs.kernel_vmstat]]
# Read TCP metrics such as established, time wait and sockets counts.
[[inputs.netstat]]

# Ping given url(s) and return statistics
[[inputs.ping]]
  ## NOTE: this plugin forks the ping command. You may need to set capabilities
  ## via setcap cap_net_raw+p /bin/ping
  urls = ["status.wchmnn.de"]
  count = 1

# TCP or UDP 'ping' given url and collect response time in seconds
[[inputs.net_response]]
  protocol = "tcp"
  address = "status.wchmnn.de:80"
  timeout = "1s"

# HTTP/HTTPS request given an address a method and a timeout
[[inputs.http_response]]
  urls = ["http://status.wchmnn.de"]
  response_timeout = "5s"
  method = "GET"
  follow_redirects = true

# Query given DNS server and gives statistics
[[inputs.dns_query]]
  servers = ["8.8.8.8"] 
  domains = ["wchmnn.de."] 
  record_type = "AAAA"
