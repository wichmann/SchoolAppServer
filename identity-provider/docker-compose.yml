services:
  authentik-db:
    image: ${AUTHENTIK_DATABASE_IMAGE}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 5s
    volumes:
      - authentik_database:/var/lib/postgresql/data
    networks:
      - authentik_net
    environment:
      POSTGRES_PASSWORD: ${AUTHENTIK_DATABASE_PASS}
      POSTGRES_USER: ${AUTHENTIK_DATABASE_USER}
      POSTGRES_DB: ${AUTHENTIK_DATABASE_DB}

  authentik-redis:
    image: ${AUTHENTIK_REDIS_IMAGE}
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 3s
    volumes:
      - authentik_redis:/data
    networks:
      - authentik_net

  authentik:
    # authentik is an open-source identity provider and user management.
    # To start the initial setup, navigate to http://<your server's IP or hostname>:9000/if/flow/initial-setup/
    # TODO: Check whether a authentik proxy is necessary (ghcr.io/goauthentik/proxy).
    # More infos:
    #  - https://github.com/brokenscripts/authentik_traefik [very good guide to Authentik behind Traefik!]
    #  - https://helgeklein.com/blog/authentik-authentication-sso-user-management-password-reset-for-home-networks/
    # Alternatives to Authentik:
    #  - Keycloak https://www.keycloak.org | https://github.com/keycloak/keycloak [by Redhat, scalable solution, extensive features]
    #  - Authelia https://www.authelia.com/ | https://github.com/authelia/authelia [more easily to deploy and maintain]
    image: ${AUTHENTIK_IMAGE}
    restart: unless-stopped
    depends_on:
      authentik-db:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-db
      - AUTHENTIK_POSTGRESQL__USER=${AUTHENTIK_DATABASE_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${AUTHENTIK_DATABASE_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_DATABASE_PASS}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=${AUTHENTIK_ERROR_REPORTING__ENABLED}
      - AUTHENTIK_GDPR_COMPLIANCE=true
      #- AUTHENTIK_DEBUG=true
      #- AUTHENTIK_LOG_LEVEL=debug
      #- AUTHENTIK_BOOTSTRAP_EMAIL=akadmin@example.com
      #- AUTHENTIK_BOOTSTRAP_PASSWORD=akadmin
      #- AUTHENTIK_COOKIE_DOMAIN=${AUTHENTIK_COOKIE_DOMAIN}
      #- AUTHENTIK_FLOW_BACKGROUND_URL=
      # configure mail (SMTP) settings
      - AUTHENTIK_EMAIL__HOST=${AUTHENTIK_EMAIL__HOST}
      - AUTHENTIK_EMAIL__PORT=${AUTHENTIK_EMAIL__PORT}
      - AUTHENTIK_EMAIL__USERNAME=${AUTHENTIK_EMAIL__USERNAME}
      - AUTHENTIK_EMAIL__PASSWORD=${AUTHENTIK_EMAIL__PASSWORD}
      - AUTHENTIK_EMAIL__FROM=${AUTHENTIK_EMAIL__FROM}
      #- AUTHENTIK_EMAIL__USE_TLS=
      #- AUTHENTIK_EMAIL__USE_SSL=
      #- AUTHENTIK_EMAIL__TIMEOUT=
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"
      - "traefik.http.routers.authentik.rule=Host(`${AUTHENTIK_DOMAIN}`)"
      - "traefik.http.routers.authentik.entrypoints=websecure"
      - "traefik.http.routers.authentik.tls=true"
      - "traefik.http.routers.authentik.tls.certresolver=letsencrypt"
    volumes:
      - authentik_media:/media
      - authentik_templates:/templates
    networks:
      - authentik_net

  authentik-worker:
    image: ${AUTHENTIK_IMAGE}
    restart: unless-stopped
    depends_on:
      authentik-db:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-db
      - AUTHENTIK_POSTGRESQL__USER=${AUTHENTIK_DATABASE_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${AUTHENTIK_DATABASE_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_DATABASE_PASS}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here: https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have
    # the correct UID/GID (1000:1000 by default)
    #user: root
    volumes:
      #- /var/run/docker.sock:/var/run/docker.sock
      - authentik_media:/media
      - authentik_templates:/templates
    #user: root
    networks:
      - authentik_net

volumes:
  authentik_database:
  authentik_redis:
  authentik_media:
  authentik_templates:

networks:
  authentik_net:
    # https://docs.docker.com/compose/networking/#use-a-pre-existing-network
    name: infrastructure_default
    external: true
